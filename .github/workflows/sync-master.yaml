on:
  schedule:
    - cron: "0 7 * * 1"
    # scheduled at 07:00 every Monday

  workflow_dispatch: # click the button on Github repo!

name: Sync main with upstream and build Docker image

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest
    name: Sync main with upstream latest and build
    outputs:
      has_new_commits: ${{ steps.sync.outputs.has_new_commits }}

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Pull (Fast-Forward) upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          target_sync_branch: main
          upstream_sync_repo: lukevella/rallly
          upstream_sync_branch: main

      - name: Check for new commits
        if: steps.sync.outputs.has_new_commits
        run: echo "There were new commits. Continue to build and push the image."

  push_to_registry:
    needs: sync_with_upstream
    if: needs.sync_with_upstream.outputs.has_new_commits
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Free CI
        shell: bash
        run: |
          df -h
          echo "Removing large packages"
          sudo apt-get remove -y '^ghc-.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli || true
          sudo apt-get remove -y google-cloud-sdk  || true
          sudo apt-get remove -y hhvm google-chrome-stable  || true
          sudo apt-get remove -y firefox  || true
          sudo apt-get remove -y powershell  || true
          sudo apt-get remove -y mono-devel || true
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true
          df -h
          echo "Removing large directories"
          rm -rf /usr/share/dotnet/
          df -h
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sctg/rallly

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./apps/web/Dockerfile
          context: .
          build-args: |
            SELF_HOSTED=true
          platforms: linux/arm64, linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
